{"version":3,"file":"static/js/628.01fd9e9c.chunk.js","mappings":"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","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/FormTextField/FormTextField.jsx","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/Login.jsx","../node_modules/@mui/icons-material/esm/Visibility.js","../node_modules/@mui/icons-material/esm/VisibilityOff.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonSubmit = styled.button`\n  width: 100%;\n  margin-top: ${props => props.theme.spacing(4)};\n  padding: ${props => props.theme.spacing(3.5)};\n\n  font-size: 16px;\n  font-weight: 700;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.text};\n\n  border: 1px solid transparent;\n  border-radius: ${props => props.theme.spacing(1)};\n  outline: none;\n\n  transition-property: color, border-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.textAccent};\n    border: 1px solid ${props => props.theme.colors.borderHover};\n  }\n`;\n","import { ButtonSubmit } from './Button.styled';\n\nexport const Button = ({ text }) => {\n  return <ButtonSubmit type=\"submit\">{text}</ButtonSubmit>;\n};\n","import { Field } from 'formik';\nimport { TextField } from '@mui/material';\nimport PropTypes from 'prop-types';\n// import { theme } from 'constants/theme';\n\nexport const FormTextField = ({ name, label, type = 'text', children }) => {\n  return (\n    <Field name={name}>\n      {({ field, form: { touched, errors } }) => (\n        <TextField\n          {...field}\n          type={type}\n          label={label}\n          variant=\"filled\"\n          error={touched[name] && Boolean(errors[name])}\n          helperText={touched[name] && errors[name]}\n          fullWidth\n          margin=\"normal\"\n          size=\"small\"\n          InputProps={{\n            endAdornment: children,\n          }}\n          // sx={{\n          //   '&:hover': {\n          //     outline: `${theme.colors.borderHover}`,\n          //   },\n          // }}\n        />\n      )}\n    </Field>\n  );\n};\n\nFormTextField.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  children: PropTypes.node,\n};\n","import { Form as FormikForm } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  margin: ${props => props.theme.spacing(0)} auto;\n  max-width: 440px;\n`;\n","import { useDispatch } from 'react-redux';\nimport * as yup from 'yup';\nimport { Formik } from 'formik';\nimport { logIn } from 'redux/auth/operations';\nimport { useState } from 'react';\nimport { IconButton } from '@mui/material';\nimport { Visibility, VisibilityOff } from '@mui/icons-material';\nimport { FormTextField } from 'components/FormTextField/FormTextField';\nimport { theme } from 'constants/theme';\nimport { Button } from 'components/Button/Button';\nimport { Form } from './LoginForm.styled';\n\nconst schema = yup.object().shape({\n  email: yup\n    .string('Enter your email')\n    .email('Enter a valid email')\n    .required('Email is required field!'),\n  password: yup\n    .string('Enter your password')\n    .min(8, 'The length of the password must be at least 8 characters')\n    .required('Password is required'),\n});\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n\n  const onVisibilityPassword = () => {\n    setShowPassword(prevShowPassword => !prevShowPassword);\n  };\n\n  const onFormSubmit = ({ email, password }, { resetForm }) => {\n    // const { name, email, password } = values;\n    dispatch(logIn({ email, password }));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onFormSubmit}\n    >\n      <Form>\n        <FormTextField name=\"email\" label=\"Email\" />\n        <FormTextField\n          name=\"password\"\n          label=\"Password\"\n          type={showPassword ? 'text' : 'password'}\n        >\n          <IconButton\n            onClick={onVisibilityPassword}\n            sx={{\n              ':hover': {\n                color: `${theme.colors.textAccent}`,\n              },\n            }}\n          >\n            {showPassword ? <VisibilityOff /> : <Visibility />}\n          </IconButton>\n        </FormTextField>\n        <Button text={'Login'} />\n      </Form>\n    </Formik>\n  );\n};\n","// import { Helmet } from 'react-helmet';\nimport { useSelector } from 'react-redux';\nimport { LoginForm } from 'components/LoginForm/LoginForm';\nimport { selectError } from 'redux/auth/selectors';\nimport { theme } from '../constants/theme';\nimport { Section } from 'components/Section/Section';\n\nconst Login = () => {\n  const error = useSelector(selectError);\n\n  return (\n    <Section>\n      {/* <Helmet>\n        <title>Login</title>\n      </Helmet> */}\n      <LoginForm />\n      {error && (\n        <p\n          style={{\n            color: `${theme.colors.textError}`,\n            marginTop: `${theme.spacing(4)}`,\n            textAlign: 'center',\n          }}\n        >\n          Oops, something went wrong... Please, try again.\n        </p>\n      )}\n    </Section>\n  );\n};\n\nexport default Login;\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78 3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');"],"names":["ButtonSubmit","styled","props","theme","spacing","colors","text","textAccent","borderHover","Button","type","FormTextField","name","label","children","field","form","touched","errors","variant","error","Boolean","helperText","fullWidth","margin","size","InputProps","endAdornment","Form","FormikForm","schema","yup","shape","email","required","password","min","initialValues","LoginForm","dispatch","useDispatch","useState","showPassword","setShowPassword","validationSchema","onSubmit","resetForm","logIn","IconButton","onClick","prevShowPassword","sx","color","VisibilityOff","Visibility","useSelector","selectError","Section","style","marginTop","textAlign","createSvgIcon","_jsx","d"],"sourceRoot":""}