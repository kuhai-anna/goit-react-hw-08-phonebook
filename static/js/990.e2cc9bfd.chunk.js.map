{"version":3,"file":"static/js/990.e2cc9bfd.chunk.js","mappings":"sLAEaA,E,QAAeC,GAAAA,OAAH,oeAET,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IACR,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,IAAxB,IAMP,SAAAF,GAAK,OAAIA,EAAMC,MAAME,OAAOC,IAAvB,IAGG,SAAAJ,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IASX,SAAAF,GAAK,OAAIA,EAAMC,MAAME,OAAOE,UAAvB,IACM,SAAAL,GAAK,OAAIA,EAAMC,MAAME,OAAOG,WAAvB,I,SCtBhBC,EAAS,SAAC,GAAc,IAAZH,EAAW,EAAXA,KACvB,OAAO,SAACN,EAAD,CAAcU,KAAK,SAAnB,SAA6BJ,GACrC,C,kGCCYK,EAAgB,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,KAAMC,EAAqC,EAArCA,MAAqC,IAA9BH,KAAAA,OAA8B,MAAvB,OAAuB,EAAfI,EAAe,EAAfA,SAC1D,OACE,SAAC,KAAD,CAAOF,KAAMA,EAAb,SACG,gBAAGG,EAAH,EAAGA,MAAH,IAAUC,KAAQC,EAAlB,EAAkBA,QAASC,EAA3B,EAA2BA,OAA3B,OACC,SAAC,KAAD,kBACMH,GADN,IAEEL,KAAMA,EACNG,MAAOA,EACPM,QAAQ,SACRC,MAAOH,EAAQL,IAASS,QAAQH,EAAON,IACvCU,WAAYL,EAAQL,IAASM,EAAON,GACpCW,WAAS,EACTC,OAAO,SACPC,KAAK,QACLC,WAAY,CACVC,aAAcb,KAZnB,GAuBN,C,gHC7BGc,EAAY,YAgFT,IAAIC,EAAuB,SAA8BC,EAAGC,GACjE,OAAOD,IAAMC,CACd,EAqBM,SAASC,EAAeC,EAAMC,GACnC,IAAIC,EAAoD,kBAA3BD,EAAsCA,EAAyB,CAC1FE,cAAeF,GAEbG,EAAwBF,EAAgBC,cACxCA,OAA0C,IAA1BC,EAAmCR,EAAuBQ,EAC1EC,EAAwBH,EAAgBI,QACxCA,OAAoC,IAA1BD,EAAmC,EAAIA,EACjDE,EAAsBL,EAAgBK,oBACtCC,EA7BC,SAAkCL,GACvC,OAAO,SAAoCM,EAAMC,GAC/C,GAAa,OAATD,GAA0B,OAATC,GAAiBD,EAAKE,SAAWD,EAAKC,OACzD,OAAO,EAMT,IAFA,IAAIA,EAASF,EAAKE,OAETC,EAAI,EAAGA,EAAID,EAAQC,IAC1B,IAAKT,EAAcM,EAAKG,GAAIF,EAAKE,IAC/B,OAAO,EAIX,OAAO,CACR,CACF,CAYkBC,CAAyBV,GACtCW,EAAoB,IAAZR,EA/Gd,SAA8BS,GAC5B,IAAIC,EACJ,MAAO,CACLC,IAAK,SAAaC,GAChB,OAAIF,GAASD,EAAOC,EAAME,IAAKA,GACtBF,EAAMG,MAGRxB,CACR,EACDyB,IAAK,SAAaF,EAAKC,GACrBH,EAAQ,CACNE,IAAKA,EACLC,MAAOA,EAEV,EACDE,WAAY,WACV,OAAOL,EAAQ,CAACA,GAAS,EAC1B,EACDM,MAAO,WACLN,OAAQO,CACT,EAEJ,CAwF6BC,CAAqBhB,GAtFnD,SAAwBF,EAASS,GAC/B,IAAIU,EAAU,GAEd,SAASR,EAAIC,GACX,IAAIQ,EAAaD,EAAQE,WAAU,SAAUX,GAC3C,OAAOD,EAAOG,EAAKF,EAAME,IAC1B,IAED,GAAIQ,GAAc,EAAG,CACnB,IAAIV,EAAQS,EAAQC,GAOpB,OALIA,EAAa,IACfD,EAAQG,OAAOF,EAAY,GAC3BD,EAAQI,QAAQb,IAGXA,EAAMG,KACd,CAGD,OAAOxB,CACR,CAwBD,MAAO,CACLsB,IAAKA,EACLG,IAxBF,SAAaF,EAAKC,GACZF,EAAIC,KAASvB,IAEf8B,EAAQI,QAAQ,CACdX,IAAKA,EACLC,MAAOA,IAGLM,EAAQd,OAASL,GACnBmB,EAAQK,MAGb,EAaCT,WAXF,WACE,OAAOI,CACR,EAUCH,MARF,WACEG,EAAU,EACX,EAQF,CAmCgEM,CAAezB,EAASE,GAEvF,SAASwB,IACP,IAAIb,EAAQL,EAAMG,IAAIgB,WAEtB,GAAId,IAAUxB,EAAW,CAIvB,GAFAwB,EAAQnB,EAAKkC,MAAM,KAAMD,WAErB1B,EAAqB,CACvB,IAAIkB,EAAUX,EAAMO,aAChBc,EAAgBV,EAAQW,MAAK,SAAUpB,GACzC,OAAOT,EAAoBS,EAAMG,MAAOA,EACzC,IAEGgB,IACFhB,EAAQgB,EAAchB,MAEzB,CAEDL,EAAMM,IAAIa,UAAWd,EACtB,CAED,OAAOA,CACR,CAMD,OAJAa,EAASK,WAAa,WACpB,OAAOvB,EAAMQ,OACd,EAEMU,CACR,CC/ID,SAASM,EAAgBC,GACvB,IAAIC,EAAeC,MAAMC,QAAQH,EAAM,IAAMA,EAAM,GAAKA,EAExD,IAAKC,EAAaG,OAAM,SAAUC,GAChC,MAAsB,oBAARA,CACf,IAAG,CACF,IAAIC,EAAkBL,EAAaM,KAAI,SAAUF,GAC/C,MAAsB,oBAARA,EAAqB,aAAeA,EAAIjE,MAAQ,WAAa,YAAciE,CAC1F,IAAEG,KAAK,MACR,MAAM,IAAIC,MAAM,kGAAoGH,EAAkB,IACvI,CAED,OAAOL,CACR,CAEM,SAASS,EAAsBC,GACpC,IAAK,IAAIC,EAAOlB,UAAUtB,OAAQyC,EAAyB,IAAIX,MAAMU,EAAO,EAAIA,EAAO,EAAI,GAAIE,EAAO,EAAGA,EAAOF,EAAME,IACpHD,EAAuBC,EAAO,GAAKpB,UAAUoB,GAG/C,IAAIC,EAAiB,WACnB,IAAK,IAAIC,EAAQtB,UAAUtB,OAAQ4B,EAAQ,IAAIE,MAAMc,GAAQC,EAAQ,EAAGA,EAAQD,EAAOC,IACrFjB,EAAMiB,GAASvB,UAAUuB,GAG3B,IAEIC,EAFAC,EAAkB,EAOlBC,EAAwB,CAC1BC,oBAAgBrC,GAGdsC,EAAatB,EAAMT,MAQvB,GAN0B,kBAAf+B,IACTF,EAAwBE,EAExBA,EAAatB,EAAMT,OAGK,oBAAf+B,EACT,MAAM,IAAIb,MAAM,qFAAuFa,EAAa,KAKtH,IAAIC,EAAwBH,EACxBI,EAAyBD,EAAsBF,eAC/CA,OAA4C,IAA3BG,EAAoCX,EAAyBW,EAM9EC,EAAsBvB,MAAMC,QAAQkB,GAAkBA,EAAiB,CAACA,GACxEpB,EAAeF,EAAgBC,GAC/B0B,EAAqBf,EAAQhB,WAAM,EAAQ,CAAC,WAG9C,OAFAwB,IAEOG,EAAW3B,MAAM,KAAMD,UAC/B,GAAEiC,OAAOF,IAENG,EAAWjB,GAAQ,WAIrB,IAHA,IAAIkB,EAAS,GACTzD,EAAS6B,EAAa7B,OAEjBC,EAAI,EAAGA,EAAID,EAAQC,IAG1BwD,EAAOC,KAAK7B,EAAa5B,GAAGsB,MAAM,KAAMD,YAK1C,OADAwB,EAAcQ,EAAmB/B,MAAM,KAAMkC,EAE9C,IAeD,OAdAE,OAAOC,OAAOJ,EAAU,CACtBN,WAAYA,EACZI,mBAAoBA,EACpBzB,aAAcA,EACdgC,WAAY,WACV,OAAOf,CACR,EACDgB,eAAgB,WACd,OAAOf,CACR,EACDgB,oBAAqB,WACnB,OAAOhB,EAAkB,CAC1B,IAEIS,CACR,EAGD,OAAOb,CACR,CACM,I,QAAIA,EAAgCL,EAAsBlD,GCvGpD4E,EAAe,SAAAC,GAAK,OAAIA,EAAMC,MAAV,ECKpBC,EAAkB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,SAAnB,EAEvBC,EAAc,SAAAL,GAAK,OAAIA,EAAMG,SAAS5F,KAAnB,EAEnB+F,EAAwB5B,EACnC,CAP4B,SAAAsB,GAAK,OAAIA,EAAMG,QAAV,EAOhBJ,IACjB,SAACI,EAAUF,GAAY,IAAD,EACdM,EAAe,OAAGN,QAAH,IAAGA,OAAH,EAAGA,EAAQO,cAEhC,cAAOL,QAAP,IAAOA,GAAP,UAAOA,EAAUM,aAAjB,aAAO,EAAiBR,QAAO,gBAAGlG,EAAH,EAAGA,KAAH,cAC7BA,QAD6B,IAC7BA,OAD6B,EAC7BA,EAAMyG,cAAcE,SAASH,EADA,GAGhC,I,iDCdUI,GAAOvH,EAAAA,EAAAA,IAAOwH,EAAAA,GAAPxH,CAAH,kEACL,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,I,SCOXsH,EAASC,EAAAA,KAAaC,MAAM,CAChChH,KAAM+G,EAAAA,GAEF,gGAEDE,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,6BACZC,OAAQL,EAAAA,GAEJ,gGAEDI,SAAS,uCAGRE,EAAgB,CACpBrH,KAAM,GACNoH,OAAQ,IAGGE,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXpB,GAAWqB,EAAAA,EAAAA,IAAYlB,GAc7B,OACE,SAAC,KAAD,CACEc,cAAeA,EACfK,iBAAkBZ,EAClBa,SAhBiB,SAAC,EAAD,GAAsC,IAAnC3H,EAAkC,EAAlCA,KAAMoH,EAA4B,EAA5BA,OAAYQ,EAAgB,EAAhBA,UAElCC,EAAmB7H,EAAKyG,cACxBqB,EAAQ,OAAG1B,QAAH,IAAGA,OAAH,EAAGA,EAAUjC,KAAI,SAAA4D,GAAO,OAAIA,EAAQ/H,KAAKyG,aAAjB,IAE9B,OAARqB,QAAQ,IAARA,GAAAA,EAAUnB,SAASkB,GACfG,EAAAA,GAAAA,MAAA,2CAAgDhI,EAAhD,MACAuH,GAASU,EAAAA,EAAAA,IAAW,CAAEjI,KAAAA,EAAMoH,OAAAA,KAEhCQ,GACD,EAGC,UAKE,UAAChB,EAAD,YACE,SAAC7G,EAAA,EAAD,CAAeC,KAAK,OAAOC,MAAM,UACjC,SAACF,EAAA,EAAD,CAAeC,KAAK,SAASC,MAAM,YACnC,SAACJ,EAAA,EAAD,CAAQH,KAAM,oBAIrB,E,oBC1DYwI,EAAc7I,EAAAA,GAAAA,GAAH,sOAIX,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAA8B,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAE/B,SAAAF,GAAK,OAAIA,EAAMC,MAAME,OAAO0I,MAAvB,IACR,SAAA7I,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAGH,SAAAF,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAIb4I,EAAU/I,EAAAA,GAAAA,EAAH,gGAGX,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,QAAQ,EAAxB,IAEH,SAAAF,GAAK,OAAIA,EAAMC,MAAME,OAAOC,IAAvB,IAGH2I,EAAchJ,EAAAA,GAAAA,KAAH,6C,UChBXiJ,EAAkB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,GAAIvI,EAAmB,EAAnBA,KAAMoH,EAAa,EAAbA,OACpCG,GAAWC,EAAAA,EAAAA,MAGjB,OACE,UAACU,EAAD,YACE,UAACE,EAAD,YACE,UAACC,EAAD,WAAcrI,EAAd,QACA,gCAAQoH,SAEV,SAACoB,EAAA,EAAD,CACE,aAAW,SACXC,QAVW,kBAAMlB,GAASmB,EAAAA,EAAAA,IAAcH,GAA7B,EAWXI,GAAI,CACF,SAAU,CACRC,MAAM,GAAD,OAAKrJ,EAAAA,EAAAA,OAAAA,aALhB,UASE,SAACsJ,EAAA,EAAD,CAAkBC,SAAS,gBAIlC,EC1BKC,EAAS,CACbC,KAAM,CACJC,UAAU,GAAD,OAAK1J,EAAAA,EAAAA,QAAc,MAInB2J,EAAc,WACzB,IAAM9C,GAAWqB,EAAAA,EAAAA,IAAYlB,GAE7B,OACE,eAAI4C,MAAOJ,EAAOC,KAAlB,gBACG5C,QADH,IACGA,OADH,EACGA,EAAUjC,KAAI,gBAAGoE,EAAH,EAAGA,GAAIvI,EAAP,EAAOA,KAAMoH,EAAb,EAAaA,OAAb,OACb,SAACkB,EAAD,CAA0BC,GAAIA,EAAIvI,KAAMA,EAAMoH,OAAQA,GAAhCmB,EADT,KAKpB,E,oBChBYa,EAAS,WACpB,IAAM7B,GAAWC,EAAAA,EAAAA,MACX6B,GAAc5B,EAAAA,EAAAA,IAAYzB,GAMhC,OACE,SAACsD,EAAA,EAAD,CACEf,GAAG,kBACHtI,MAAM,wBACNH,KAAK,OACLyJ,gBAAiB,CACfC,QAAQ,GAEVjJ,QAAQ,SACRiC,MAAO6G,EACPI,SAdqB,SAAAC,GACvBnC,GAASoC,EAAAA,EAAAA,GAAaD,EAAEE,cAAcpH,OACvC,EAaG7B,WAAS,GAGd,E,6BCfKoI,EAAS,CACbc,UAAW,CACTjJ,OAAQ,SACRkJ,SAAU,MA6Bd,EAzBiB,WACf,IAAMvC,GAAWC,EAAAA,EAAAA,MACXnB,GAAYoB,EAAAA,EAAAA,IAAYtB,GACxB3F,GAAQiH,EAAAA,EAAAA,IAAYnB,GAM1B,OAJAyD,EAAAA,EAAAA,YAAU,WACRxC,GAASyC,EAAAA,EAAAA,MACV,GAAE,CAACzC,KAGF,gCACGlB,IAAc7F,IAAS,SAACyJ,EAAA,EAAD,KACxB,SAACC,EAAA,EAAD,CAASC,UAAU,YAAnB,UACE,SAAC7C,EAAD,OAEF,SAAC4C,EAAA,EAAD,CAASE,MAAM,WAAf,UACE,iBAAKjB,MAAOJ,EAAOc,UAAnB,WACE,SAACT,EAAD,KACA,SAACF,EAAD,WAKT,C,2BCxCGmB,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,uFACD,gBACJN,EAAQ,EAAUG,C","sources":["components/Button/Button.styled.js","components/Button/Button.jsx","components/FormTextField/FormTextField.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/filter/selectors.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem/ContactListItem.styled.js","components/ContactList/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/Contacts.jsx","../node_modules/@mui/icons-material/RemoveCircle.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ButtonSubmit = styled.button`\n  width: 100%;\n  margin-top: ${props => props.theme.spacing(4)};\n  padding: ${props => props.theme.spacing(3.5)};\n\n  font-size: 16px;\n  font-weight: 700;\n  text-decoration: none;\n  text-transform: uppercase;\n  color: ${props => props.theme.colors.text};\n\n  border: 1px solid transparent;\n  border-radius: ${props => props.theme.spacing(1)};\n  outline: none;\n\n  transition-property: color, border-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    color: ${props => props.theme.colors.textAccent};\n    border: 1px solid ${props => props.theme.colors.borderHover};\n  }\n`;\n","import { ButtonSubmit } from './Button.styled';\n\nexport const Button = ({ text }) => {\n  return <ButtonSubmit type=\"submit\">{text}</ButtonSubmit>;\n};\n","import { Field } from 'formik';\nimport { TextField } from '@mui/material';\nimport PropTypes from 'prop-types';\n// import { theme } from 'constants/theme';\n\nexport const FormTextField = ({ name, label, type = 'text', children }) => {\n  return (\n    <Field name={name}>\n      {({ field, form: { touched, errors } }) => (\n        <TextField\n          {...field}\n          type={type}\n          label={label}\n          variant=\"filled\"\n          error={touched[name] && Boolean(errors[name])}\n          helperText={touched[name] && errors[name]}\n          fullWidth\n          margin=\"normal\"\n          size=\"small\"\n          InputProps={{\n            endAdornment: children,\n          }}\n          // sx={{\n          //   '&:hover': {\n          //     outline: `${theme.colors.borderHover}`,\n          //   },\n          // }}\n        />\n      )}\n    </Field>\n  );\n};\n\nFormTextField.propTypes = {\n  name: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  children: PropTypes.node,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","export const selectFilter = state => state.filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectFilter } from 'redux/filter/selectors';\n\nexport const selectContacts = state => state.contacts;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizeFilter = filter?.toLowerCase(); // ?\n\n    return contacts?.items?.filter(({ name }) =>\n      name?.toLowerCase().includes(normalizeFilter)\n    ); // ?\n  }\n);\n","import { Form as FormikForm } from 'formik';\nimport styled from 'styled-components';\n\nexport const Form = styled(FormikForm)`\n  margin: ${props => props.theme.spacing(0)} auto;\n  max-width: 440px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { FormTextField } from 'components/FormTextField/FormTextField';\nimport { Button } from 'components/Button/Button';\nimport { Form } from './ContactForm.styled';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string(\n      'Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer'\n    )\n    .min(2, 'Too short!')\n    .max(40, 'Too long!')\n    .required('Name is a required field!'),\n  number: yup\n    .number(\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required('Phone number is a required field!'),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectVisibleContacts);\n\n  const onFormSubmit = ({ name, number }, { resetForm }) => {\n    // const { name, number } = values;\n    const normalizeNewName = name.toLowerCase();\n    const nameList = contacts?.map(contact => contact.name.toLowerCase()); // ?\n\n    nameList?.includes(normalizeNewName)\n      ? toast.error(`You already have a contact named ${name}.`)\n      : dispatch(addContact({ name, number }));\n\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={onFormSubmit}\n    >\n      <Form>\n        <FormTextField name=\"name\" label=\"Name\" />\n        <FormTextField name=\"number\" label=\"Number\" />\n        <Button text={'Add contact'} />\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: ${props => props.theme.spacing(1)} ${props => props.theme.spacing(3)};\n\n  border: 1px solid ${props => props.theme.colors.border};\n  border-radius: ${props => props.theme.spacing(1)};\n\n  :not(:last-of-type) {\n    margin-bottom: ${props => props.theme.spacing(2)};\n  }\n`;\n\nexport const Contact = styled.p`\n  display: flex;\n  align-items: center;\n  gap: ${props => props.theme.spacing(2)};\n\n  color: ${props => props.theme.colors.text};\n`;\n\nexport const ContactName = styled.span`\n  font-weight: 500;\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { IconButton } from '@mui/material';\nimport RemoveCircleIcon from '@mui/icons-material/RemoveCircle';\nimport { Contact, ContactItem, ContactName } from './ContactListItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { theme } from 'constants/theme';\n\nexport const ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const onDelete = () => dispatch(deleteContact(id));\n\n  return (\n    <ContactItem>\n      <Contact>\n        <ContactName>{name} </ContactName>\n        <span> {number}</span>\n      </Contact>\n      <IconButton\n        aria-label=\"delete\"\n        onClick={onDelete}\n        sx={{\n          ':hover': {\n            color: `${theme.colors.deleteBtn}`,\n          },\n        }}\n      >\n        <RemoveCircleIcon fontSize=\"inherit\" />\n      </IconButton>\n    </ContactItem>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { ContactListItem } from './ContactListItem/ContactListItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { theme } from 'constants/theme';\n\nconst styles = {\n  list: {\n    marginTop: `${theme.spacing(4)}`,\n  },\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul style={styles.list}>\n      {contacts?.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\nimport { TextField } from '@mui/material';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { changeFilter } from 'redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n\n  const onFilterContacts = e => {\n    dispatch(changeFilter(e.currentTarget.value));\n  };\n\n  return (\n    <TextField\n      id=\"standard-number\"\n      label=\"Find contacts by name\"\n      type=\"text\"\n      InputLabelProps={{\n        shrink: true,\n      }}\n      variant=\"filled\"\n      value={filterValue}\n      onChange={onFilterContacts}\n      fullWidth\n    />\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { Section } from 'components/Section/Section';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; //useSelector\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\n\n// import { useLocalStorage } from 'hooks/useLocalStorage';\n\nconst styles = {\n  container: {\n    margin: '0 auto',\n    maxWidth: 440,\n  },\n};\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && !error && <Loader />}\n      <Section mainTitle=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <div style={styles.container}>\n          <Filter />\n          <ContactList />\n        </div>\n      </Section>\n    </>\n  );\n};\n\nexport default Contacts;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm5 11H7v-2h10v2z\"\n}), 'RemoveCircle');\nexports.default = _default;"],"names":["ButtonSubmit","styled","props","theme","spacing","colors","text","textAccent","borderHover","Button","type","FormTextField","name","label","children","field","form","touched","errors","variant","error","Boolean","helperText","fullWidth","margin","size","InputProps","endAdornment","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectFilter","state","filter","selectIsLoading","contacts","isLoading","selectError","selectVisibleContacts","normalizeFilter","toLowerCase","items","includes","Form","FormikForm","schema","yup","shape","min","max","required","number","initialValues","ContactForm","dispatch","useDispatch","useSelector","validationSchema","onSubmit","resetForm","normalizeNewName","nameList","contact","toast","addContact","ContactItem","border","Contact","ContactName","ContactListItem","id","IconButton","onClick","deleteContact","sx","color","RemoveCircle","fontSize","styles","list","marginTop","ContactList","style","Filter","filterValue","TextField","InputLabelProps","shrink","onChange","e","changeFilter","currentTarget","container","maxWidth","useEffect","fetchContacts","Loader","Section","mainTitle","title","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}